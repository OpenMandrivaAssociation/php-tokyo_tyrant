
https://github.com/mkoppanen/php-tokyo_tyrant/downloads

diff -Naurp tokyo_tyrant-0.6.0/tokyo_tyrant.c tokyo_tyrant-0.6.0.oden/tokyo_tyrant.c
--- tokyo_tyrant-0.6.0/tokyo_tyrant.c	2011-02-22 19:13:13.000000000 +0100
+++ tokyo_tyrant-0.6.0.oden/tokyo_tyrant.c	2012-05-06 10:03:47.820495232 +0200
@@ -1824,7 +1824,7 @@ ZEND_BEGIN_ARG_INFO_EX(tokyo_tyrant_setm
 	ZEND_ARG_INFO(0, check_consistency)
 ZEND_END_ARG_INFO()
 
-static function_entry php_tokyo_tyrant_class_methods[] =
+static zend_function_entry php_tokyo_tyrant_class_methods[] =
 {
 	PHP_ME(tokyotyrant, __construct,	tokyo_tyrant_construct_args,	ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)
 	PHP_ME(tokyotyrant, connect,		tokyo_tyrant_connect_args,		ZEND_ACC_PUBLIC)
@@ -1864,7 +1864,7 @@ ZEND_BEGIN_ARG_INFO_EX(tokyo_tyrant_tabl
 	ZEND_ARG_INFO(0, type)
 ZEND_END_ARG_INFO()
 
-static function_entry php_tokyo_tyrant_table_class_methods[] =
+static zend_function_entry php_tokyo_tyrant_table_class_methods[] =
 {
 	/* Inherit and override */
 	PHP_ME(tokyotyranttable, put,		tokyo_tyrant_put_args,				ZEND_ACC_PUBLIC)
@@ -1908,7 +1908,7 @@ ZEND_BEGIN_ARG_INFO_EX(tokyo_tyrant_quer
 	ZEND_ARG_INFO(0, type)
 ZEND_END_ARG_INFO()
 
-static function_entry php_tokyo_tyrant_query_class_methods[] =
+static zend_function_entry php_tokyo_tyrant_query_class_methods[] =
 {
 	PHP_ME(tokyotyrantquery, __construct,	tokyo_tyrant_query_construct_args,	ZEND_ACC_PUBLIC)
 	PHP_ME(tokyotyrantquery, addcond,		tokyo_tyrant_query_addcond_args,	ZEND_ACC_PUBLIC)
@@ -1933,7 +1933,7 @@ ZEND_BEGIN_ARG_INFO_EX(tokyo_tyrant_iter
 	ZEND_ARG_OBJ_INFO(0, TokyoTyrant, TokyoTyrant, 0) 
 ZEND_END_ARG_INFO()
 
-static function_entry php_tokyo_tyrant_iterator_class_methods[] =
+static zend_function_entry php_tokyo_tyrant_iterator_class_methods[] =
 {
 	/* Iterator interface */
 	PHP_ME(tokyotyrantiterator, __construct,	tokyo_tyrant_iterator_construct_args,	ZEND_ACC_PUBLIC)
@@ -1958,17 +1958,7 @@ static void php_tokyo_tyrant_query_objec
 	}
 	
 	if (intern->parent) {
-	
-#ifdef Z_REFCOUNT_P
-		Z_SET_REFCOUNT_P(intern->parent, Z_REFCOUNT_P(intern->parent) - 1);
-		if (Z_REFCOUNT_P(intern->parent) <= 0) {
-#else
-		intern->parent->refcount--; 
-		if (intern->parent->refcount == 0) {
-#endif		
-	 	/* TODO: check if this leaks */
-			efree(intern->parent);
-		}
+		zval_ptr_dtor(&(intern->parent));
 	}
 	
 	if (intern->res) {
@@ -1982,9 +1972,20 @@ static void php_tokyo_tyrant_query_objec
 	efree(intern);
 }
 
+/* PHP 5.4 */
+#if PHP_VERSION_ID < 50399
+# define object_properties_init(zo, class_type) { \
+			zval *tmp; \
+			zend_hash_copy((*zo).properties, \
+							&class_type->default_properties, \
+							(copy_ctor_func_t) zval_add_ref, \
+							(void *) &tmp, \
+							sizeof(zval *)); \
+		 }
+#endif
+
 static zend_object_value php_tokyo_tyrant_query_object_new(zend_class_entry *class_type TSRMLS_DC)
 {
-	zval *tmp;
 	zend_object_value retval;
 	php_tokyo_tyrant_query_object *intern;
 
@@ -1998,7 +1999,7 @@ static zend_object_value php_tokyo_tyran
 	intern->parent = NULL;
 
 	zend_object_std_init(&intern->zo, class_type TSRMLS_CC);
-	zend_hash_copy(intern->zo.properties, &class_type->default_properties, (copy_ctor_func_t) zval_add_ref,(void *) &tmp, sizeof(zval *));
+	object_properties_init(&intern->zo, class_type);
 
 	retval.handle = zend_objects_store_put(intern, NULL, (zend_objects_free_object_storage_t) php_tokyo_tyrant_query_object_free_storage, NULL TSRMLS_CC);
 	retval.handlers = (zend_object_handlers *) &tokyo_tyrant_query_object_handlers;
@@ -2018,17 +2019,7 @@ static void php_tokyo_tyrant_iterator_ob
 	}
 	
 	if (intern->parent) {
-	
-#ifdef Z_REFCOUNT_P
-		Z_SET_REFCOUNT_P(intern->parent, Z_REFCOUNT_P(intern->parent) - 1);
-		if (Z_REFCOUNT_P(intern->parent) <= 0) {
-#else
-		intern->parent->refcount--; 
-		if (intern->parent->refcount == 0) {
-#endif		
-	 	/* TODO: check if this leaks */
-			efree(intern->parent);
-		}
+		zval_ptr_dtor(&(intern->parent));
 	}
 	zend_object_std_dtor(&intern->zo TSRMLS_CC);
 	efree(intern);
@@ -2049,7 +2040,7 @@ static zend_object_value php_tokyo_tyran
 	intern->current	= NULL;
 
 	zend_object_std_init(&intern->zo, class_type TSRMLS_CC);
-	zend_hash_copy(intern->zo.properties, &class_type->default_properties, (copy_ctor_func_t) zval_add_ref,(void *) &tmp, sizeof(zval *));
+	object_properties_init(&intern->zo, class_type);
 
 	retval.handle = zend_objects_store_put(intern, NULL, (zend_objects_free_object_storage_t) php_tokyo_tyrant_iterator_object_free_storage, NULL TSRMLS_CC);
 	retval.handlers = (zend_object_handlers *) &tokyo_tyrant_iterator_object_handlers;
@@ -2087,7 +2078,7 @@ static zend_object_value php_tokyo_tyran
 	}
 
 	zend_object_std_init(&intern->zo, class_type TSRMLS_CC);
-	zend_hash_copy(intern->zo.properties, &class_type->default_properties, (copy_ctor_func_t) zval_add_ref,(void *) &tmp, sizeof(zval *));
+	object_properties_init(&intern->zo, class_type);
 
 	retval.handle = zend_objects_store_put(intern, NULL, (zend_objects_free_object_storage_t) php_tokyo_tyrant_object_free_storage, NULL TSRMLS_CC);
 	retval.handlers = (zend_object_handlers *) &tokyo_tyrant_object_handlers;
diff -Naurp tokyo_tyrant-0.6.0/tokyo_tyrant_funcs.c tokyo_tyrant-0.6.0.oden/tokyo_tyrant_funcs.c
--- tokyo_tyrant-0.6.0/tokyo_tyrant_funcs.c	2011-02-22 19:13:13.000000000 +0100
+++ tokyo_tyrant-0.6.0.oden/tokyo_tyrant_funcs.c	2012-05-06 10:03:47.820495233 +0200
@@ -234,8 +234,8 @@ zend_bool php_tt_query_object_init(php_t
 	query->conn    = db->conn;
 	query->parent  = parent;
 	query->res     = NULL;
-#ifdef Z_REFCOUNT_P
-	Z_SET_REFCOUNT_P(parent, Z_REFCOUNT_P(parent) + 1);
+#ifdef Z_ADDREF_P
+	Z_ADDREF_P(parent);
 #else
 	parent->refcount++;
 #endif
@@ -264,8 +264,8 @@ zend_bool php_tt_iterator_object_init(ph
 	iterator->conn   = db->conn;
 	iterator->parent = parent;
 
-#ifdef Z_REFCOUNT_P
-	Z_SET_REFCOUNT_P(parent, Z_REFCOUNT_P(parent) + 1);
+#ifdef Z_ADDREF_P
+	Z_ADDREF_P(parent);
 #else
 	parent->refcount++;
 #endif
